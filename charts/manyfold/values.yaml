# Default values for manyfold.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global parameters
## @param replicaCount Number of replicas of the manyfold Deployment
replicaCount: 1

## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param podAnnotations Additional annotations for the Pod resource
## @param podLabels Additional labels for the Pod resource
podAnnotations: {}
podLabels: {}

## @param imagePullSecrets Docker registry pull secrets
## @param nameOverride Name override
## @param fullnameOverride Full name override
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

## @section Image parameters
## @param image.repository Container image repository
## @param image.pullPolicy Container image pull policy
## @param image.tag Overrides the image tag whose default is the chart appVersion
image:
  repository: ghcr.io/manyfold3d/manyfold
  pullPolicy: IfNotPresent
  tag: ""

## @section Service account parameters
## @param serviceAccount.create Specifies whether a service account should be created
## @param serviceAccount.automount Automatically mount a ServiceAccount's API credentials?
## @param serviceAccount.annotations Additional annotations for the ServiceAccount resource
## @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the fullname template
serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

## @section Pod security context parameters
## @param podSecurityContext Additional pod security context
podSecurityContext: {}
  # fsGroup: 2000

## @section Security context parameters
## @param securityContext Container security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## @section Service parameters
## @param service.type Service type to create
## @param service.port Service port to use
service:
  type: ClusterIP
  port: 3214

## @section Ingress parameters
## Configure the ingress resource that allows you to access the application
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
## @param ingress.enabled Enable ingress record generation
## @param ingress.className IngressClass that will be used to implement the Ingress
## @param ingress.annotations Additional annotations for the Ingress resource
## @param ingress.hosts An array with hostname(s) to be covered with the ingress record
## @param ingress.tls TLS configuration for hostname(s) to be covered with this ingress record
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

## @section Resources parameters
## @param resources.requests.cpu Minimum CPU requested
## @param resources.requests.memory Minimum memory requested
## @extra resources.limits.cpu Maximum CPU allowed
## @extra resources.limits.memory Maximum memory allowed
resources: {}

## @section Probe parameters
## @param livenessProbe.httpGet.path HTTP path for the liveness probe
## @param livenessProbe.httpGet.port Port name or number for the liveness probe
## @param readinessProbe.httpGet.path HTTP path for the readiness probe
## @param readinessProbe.httpGet.port Port name or number for the readiness probe
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http

## @section Autoscaling parameters
## Autoscaling parameters
## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
## @param autoscaling.enabled Enable Horizontal POD autoscaling
## @param autoscaling.minReplicas Minimum number of replicas
## @param autoscaling.maxReplicas Maximum number of replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
## @param autoscaling.targetMemoryUtilizationPercentage Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @section Extra volumes parameter
## Additional volumes on the Deployment definition
## @param volumes Provide extra volumes for the main pod
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

## @section Extra volume mounts parameter
## Additional volume mounts for the Deployment
## @param volumeMounts Additional volume mounts for the main pod
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true


## @section Redis parameters
## @param redis.enabled Deploy Redis chart
## @param redis.architecture Redis architecture
## @param redis.auth.enabled Enable Redis authentication
redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false

## @section PostgreSQL parameters
## @param postgresql.enabled Deploy PostgreSQL chart
## @param postgresql.global.postgresql.auth.username Database username
## @param postgresql.global.postgresql.auth.database Database name
## @param postgresql.global.postgresql.auth.password Database password
postgresql:
  enabled: false
  global:
    postgresql:
      auth:
        username: manyfold
        database: manyfold
        password: manyfold

## @section Environment parameters
env:
  SECRET_KEY_BASE:
    value: "super_secret_key"
  REDIS_URL:
    value: redis://{{ printf "%s-redis-master" .Release.Name }}:6379/1
  DATABASE_ADAPTER:
    value: "postgresql"
  DATABASE_HOST:
    value: "{{ .Release.Name }}-postgresql"
  DATABASE_PORT:
    value: "5432"
  DATABASE_USER:
    value: "{{ .Values.postgresql.global.postgresql.auth.username }}"
  # -- You should provide your own secret outside of this helm-chart and use `postgresql.global.postgresql.auth.existingSecret` to provide credentials to the postgresql instance
  DATABASE_PASSWORD:
    value: "{{ .Values.postgresql.global.postgresql.auth.password }}"
  DATABASE_NAME:
    value: "{{ .Values.postgresql.global.postgresql.auth.database }}"

## @section Persistence parameters
## @param persistence.enabled If persistence is enabled
## @param persistence.name Persistent storage PVC name
## @param persistence.mountPath Mount path
## @param persistence.storageClass Persistent storage PVC storage class
## @param persistence.size Persistent storage PVC size
persistence:
  enabled: false
  name: "manyfold-library"
  mountPath: "/manyfold-library"
  storageClass: ""
  size: "10Gi"

## @section Init containers parameter
## @param initContainers Provide init containers for the main pod
initContainers: []
